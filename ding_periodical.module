<?php

/**
 * @file
 * Shows issue information on periodicals.
 */

// Load Field module hooks.
module_load_include('inc', 'ding_periodical', 'ding_periodical.field');

/**
 * Implements hook_theme().
 */
function ding_periodical_theme() {
  return array(
    'ding_periodical_issues' => array(
      'render element' => 'elements',
    ),
  );
}

/**
 * Theming function.
 */
function theme_ding_periodical_issues($variables) {
  $items = array();
  watchdog('Periodical availability Log:',json_encode($variables['elements']['#issues']), array(), WATCHDOG_NOTICE, $link = NULL);
  
  krsort($variables['elements']['#issues'],SORT_STRING);
  $tmp = $variables['elements']['#issues'];
  foreach ($tmp as $volume => $issues) {
      $first = explode('-',key($issues)); // get first issue.
      if(is_numeric($first[sizeof($first)-1]))
      {
         krsort($variables['elements']['#issues'][$volume],SORT_NATURAL);
      }
      else
      {
          //The dates from the library system are not sortet correctly.
          uksort($variables['elements']['#issues'][$volume], "ding_periodical_compare_months");
      }
      
  }
  foreach ($variables['elements']['#issues'] as $volume => $issues) {
    
    $iss = array();
    foreach ($issues as $name => $data) {
        $issue = $name;
        $total_count = 0;
        $reserveable_count = 0;
        $issue_holding = '';
        $location_html = '';
        $reserve_btn = "";
        foreach($data['placement'] as $key => $availability)
        {
            if($availability['reservable'])
            {
                $reserveable_count += 1;
                if($reserveable_count == 1 && module_exists('ding_periodical_reservation'))
                {
                    $reserve_btn = ' ' . ding_periodical_reservation_button($data['local_id'], $volume, $key, $variables['elements']['#entity']);
                }
            }
              $location_html .= '<li';
              $location_html .= ($availability['available_count'] > 0) ? ' class=available' : ' class=unavailable';
              $location_html .= '>';
              $location_html .= $availability['location'];
              $location_html .= format_plural($availability['available_count'], '(1 copy home)', '(@count copies home)');
              $location_html .= '</li>';
              $total_count += 1;
        }
        if($reserveable_count > 0)
        {
         $issue_holding .= $reserve_btn;   
        }
        $issue_holding .= '<h2>' . t('Holdings') . '</h2>';
        $issue_holding .= '<p>' . format_plural($total_count, 'We have 1 copy (@reservable_count reservable).', 'We have @count copies (@reservable_count reservable).', array('@reservable_count' => $reserveable_count)) . '</p>';
        $issue_holding .= '<ul class="holdings">';
        $issue_holding .= $location_html;
        $issue_holding .= '</ul>';
         $iss[] = array(
              'data' => '<div class="' . drupal_html_class('ding_periodical_fold').'">' . $issue . '</div>',
              'children' => array($issue_holding),
              'class' => array(drupal_html_class('ding_periodical_foldable')),
            );

    }

    $vol = array(
      'data' => '<div class="' . drupal_html_class('ding_periodical_fold').'">' . $volume . '</div>',
      'children' => $iss,
      'class' => array(drupal_html_class('ding_periodical_foldable')),
    );
    $items[] = $vol;
  }

  return theme('item_list', array('items' => $items, 'attributes' => array('class' => drupal_html_class('ding_periodical_issues'))));
}
function ding_periodical_compare_months($a, $b) {
    $tmp = explode('-',$a);
    $tmp1 = explode('-',$b);
    $tmp = $tmp[sizeof($tmp)-1];
    $tmp1 = $tmp1[sizeof($tmp1)-1];
    
    $a = ding_periodical_month_to_number($tmp);
    $b = ding_periodical_month_to_number($tmp1);

    if ($a == $b) $r = 0;
    else $r = ($a < $b) ? 1: -1;

    return $r;
}
// https://stackoverflow.com/questions/6988536/strtotime-with-different-languages
function ding_periodical_month_to_number($month, $locale_set = 'da_DK')
{
    $month  = mb_convert_case($month, MB_CASE_LOWER, 'UTF-8');
    $locale =
        setlocale(LC_TIME, '0');
        setlocale(LC_TIME, $locale_set.'.UTF-8');

    $month_number = FALSE;

    for ($i = 1; $i <= 12; $i++)
    {
        $time_month     = mktime(0, 0, 0, $i, 1, 1970);
        $short_month    = date('M', $time_month);
        $short_month_lc = strftime('%b', $time_month);

        if (stripos($month, $short_month) === 0 OR
            stripos($month, $short_month_lc) === 0)
        {
            $month_number = sprintf("%02d", $i);

            break;
        }
    }

    setlocale(LC_TIME, $locale); // return locale back

    return $month_number;
}